# $1 -- case
# $2 -- time
# $3 -- field
# $4 -- sample data
# $5 -- contour interval
define Contour

$1/$2/$3.contour.positive $1/$2/$3.contour.negative: $1/$2/$3.contour

$1/$2/$3.contour.positive:
	-grep -ve "-[0-9]*\.\?[0-9]\+$$$$" $$< | grep -ve "[[:space:]]0$$$$" | sed -re 's/^>.*$$$$//' > $$@

$1/$2/$3.contour.negative:
	-grep -e "-[0-9]*\.\?[0-9]\+$$$$" $$< | sed -re 's/^>.*$$$$//' > $$@

$1/$2/$3.contour: $4
	cut -d' ' -f1,3,4 $4 | $(pscontour) -C$5 -D > $$@

endef

# $1 -- case directory
# $2 -- target filename
# $3 -- sampleDict filename
# $4 -- time
# $5 -- sample filename (e.g. line_Exner_theta.xy)
define SampleLine

$(eval $(call CopyFile,$1/postProcessing/sets/$4/$5,$1/$4/$2))

$1/postProcessing/sets/$4/$5: $1/system/$(notdir $3)
	$(sample) -case $1 -time $4 -dict system/$(notdir $3)

$(eval $(call CopyFile,$3,$1/system/$(notdir $3)))

endef

# $1 -- case
# $2 -- times (e.g. 0 5000 10000)
# $3 -- field
# $4 -- sampleDict
define SamplePlanes

$(foreach time,$2,$(eval $(call SamplePlane,$1,$(time),$3,$4)))

$(eval $(call SampleDict,$1,$3,$4))

endef

# Save a sample plane to $1/$2/$3.$(notdir $4)
#
# $1 -- case
# $2 -- time
# $3 -- field
# $4 -- sampleDict
define SamplePlane

$1/$2/$3.$(notdir $4): \
  $1/$2/$3 \
  $1/$(notdir $4)-$3 \
  $(addprefix $1/,$(meshFiles) $(systemFiles))
	$(sample) -case $1 -time $2 -dict $(notdir $4)-$3
	cp $1/postProcessing/surfaces/$2/$3_constantPlane.raw $1/$2/$3.$(notdir $4)

endef

# $1 -- case
# $2 -- field
# $3 -- sampleDict template
define SampleDict

$1/$(notdir $3)-$2: $3
	FIELD=$2 $(envsubst) < $$< > $$@

endef
