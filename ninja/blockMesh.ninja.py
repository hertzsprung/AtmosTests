#!/usr/bin/python3

import argparse
import datetime
import ninja_syntax
import os
import sys

polyMesh = [os.path.join("constant", "polyMesh", f) for f in ["points", "faces", "owner", "neighbour", "boundary"]]

def write(case, sourceBlockMeshDict, sourceControlDict=os.path.join("src", "controlDict")):
    targetBlockMeshDict = os.path.join(case, "system", "blockMeshDict")
    targetControlDict = os.path.join(case, "system", "controlDict")

    n = ninja_syntax.Writer(sys.stdout)
    n.comment("Generated by {}".format(sys.argv[0]))
    n.comment("at {}".format(datetime.datetime.utcnow().isoformat()))
    n.newline()
    n.build \
    ( \
            outputs=[os.path.join(case, f) for f in polyMesh], \
            rule="blockMesh", \
            inputs=targetBlockMeshDict, \
            implicit=targetControlDict, \
            variables={"case": case} \
    )
    n.newline()
    n.build(outputs=targetBlockMeshDict, rule="cp", inputs=sourceBlockMeshDict)
    n.build(outputs=targetControlDict, rule="cp", inputs=sourceControlDict)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Generate a blockMesh .ninja file.')
    parser.add_argument('case', help="OpenFOAM case directory")
    parser.add_argument('blockMeshDict', help="Location of the blockMeshDict file")
    args = parser.parse_args()

    write(args.case, args.blockMeshDict)
