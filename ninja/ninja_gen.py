import datetime
import ninja_syntax
import os
import sys

class Generator:
    def __init__(self, case):
        self.case = case
        self.n = ninja_syntax.Writer(sys.stdout)

    def header(self):
        self.n.comment("Generated by {}".format(sys.argv[0]))
        self.n.comment("at {}".format(datetime.datetime.utcnow().isoformat()))
        self.n.newline()

    def copy(self, source, target):
        self.n.build(outputs=target, rule="cp", inputs=source)

    def forCase(self, path, *paths):
        return os.path.join(self.case, path, *paths)

    def polyMesh(self, case=None):
        case = case or self.case
        polyMesh = [os.path.join("constant", "polyMesh", f) for f in ["points", "faces", "owner", "neighbour", "boundary"]]
        return [os.path.join(case, f) for f in polyMesh]
